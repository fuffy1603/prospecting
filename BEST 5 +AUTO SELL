"local Players = game:GetService(\"Players\")\nlocal player = Players.LocalPlayer\nlocal VirtualInputManager = game:GetService(\"VirtualInputManager\")\nlocal RunService = game:GetService(\"RunService\")\nlocal ReplicatedStorage = game:GetService(\"ReplicatedStorage\")\n\n-- Pan Automation Variables\nlocal panRunning = false\nlocal sandPosition = nil\nlocal waterPosition = nil\n\n-- Luck Booster Variables\nlocal luckStat\nlocal originalLuckValue = 1\nlocal isLuckActive = false\nlocal currentMultiplier = 1.5\nlocal luckStatNames = {\"Luck\", \"Fortune\", \"Lucky\"}\nlocal adjustmentStep = 0.2\nlocal maxMultiplier = 3.0\n\n-- Auto-Sell Variables\nlocal autoSellEnabled = false\nlocal lastSellTime = 0\nlocal autoSellConfig = {\n    SellInterval = 5,              -- Seconds between sell attempts\n    SoundEffect = true,            -- Play cash register sound\n    SoundID = \"rbxassetid://131147520\" -- Cash register sound ID\n}\n\n-- Item categorization\nlocal items = {\n    Legendary = {\"Palladium\", \"Rose Gold\", \"Diamond\", \"Uranium\", \"Luminum\", \"Catseye\", \"Starshine\", \"Aetherite\", \"Volcanic Key\", \"Dragon Bone\", \"Cinnabar\",\"Fire Opal\"},\n    Mythic = {\"Pink Diamond\", \"Painite\", \"Inferlume\", \"Vortessence\", \"Prismara\"},\n    Exotic = {\"Dinosaur Skull\"}\n}\n\n-- Create UI\nlocal screenGui = Instance.new(\"ScreenGui\")\nscreenGui.Name = \"PanAutoGui\"\nscreenGui.ResetOnSpawn = false\nscreenGui.Parent = player:WaitForChild(\"PlayerGui\")\n\n-- Make frame taller to accommodate new controls (increased height from 420 to 480)\nlocal frame = Instance.new(\"Frame\")\nframe.Size = UDim2.new(0, 280, 0, 480)\nframe.Position = UDim2.new(0.8, 0, 0.3, 0)\nframe.BackgroundColor3 = Color3.fromRGB(30, 30, 35)\nframe.BorderSizePixel = 0\nframe.AnchorPoint = Vector2.new(0.5, 0.5)\nframe.Parent = screenGui\nframe.ClipsDescendants = true\nframe.Active = true\nframe.Draggable = true\n\n-- Add rounded corners\nlocal corner = Instance.new(\"UICorner\")\ncorner.CornerRadius = UDim.new(0, 8)\ncorner.Parent = frame\n\n-- Title bar\nlocal titleBar = Instance.new(\"Frame\")\ntitleBar.Size = UDim2.new(1, 0, 0, 36)\ntitleBar.BackgroundColor3 = Color3.fromRGB(40, 40, 45)\ntitleBar.BorderSizePixel = 0\ntitleBar.Parent = frame\n\nlocal titleCorner = Instance.new(\"UICorner\")\ntitleCorner.CornerRadius = UDim.new(0, 8)\ntitleCorner.Parent = titleBar\n\nlocal title = Instance.new(\"TextLabel\")\ntitle.Size = UDim2.new(1, -20, 1, 0)\ntitle.Position = UDim2.new(0, 10, 0, 0)\ntitle.BackgroundTransparency = 1\ntitle.Text = \"PAN AUTOMATION\"\ntitle.Font = Enum.Font.GothamBold\ntitle.TextSize = 18\ntitle.TextColor3 = Color3.fromRGB(220, 220, 230)\ntitle.TextXAlignment = Enum.TextXAlignment.Left\ntitle.Parent = titleBar\n\n-- Close button\nlocal closeBtn = Instance.new(\"TextButton\")\ncloseBtn.Size = UDim2.new(0, 24, 0, 24)\ncloseBtn.Position = UDim2.new(1, -28, 0.5, -12)\ncloseBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 65)\ncloseBtn.TextColor3 = Color3.fromRGB(220, 220, 230)\ncloseBtn.Font = Enum.Font.GothamBold\ncloseBtn.TextSize = 14\ncloseBtn.Text = \"X\"\ncloseBtn.AutoButtonColor = true\ncloseBtn.Parent = titleBar\n\nlocal closeCorner = Instance.new(\"UICorner\")\ncloseCorner.CornerRadius = UDim.new(0, 4)\ncloseCorner.Parent = closeBtn\n\n-- Content frame (made taller to fit new controls)\nlocal contentFrame = Instance.new(\"Frame\")\ncontentFrame.Size = UDim2.new(1, -20, 1, -56)\ncontentFrame.Position = UDim2.new(0, 10, 0, 46)\ncontentFrame.BackgroundTransparency = 1\ncontentFrame.Parent = frame\n\n-- Status indicator\nlocal statusIndicator = Instance.new(\"Frame\")\nstatusIndicator.Size = UDim2.new(1, 0, 0, 24)\nstatusIndicator.BackgroundColor3 = Color3.fromRGB(60, 60, 65)\nstatusIndicator.Parent = contentFrame\n\nlocal statusCorner = Instance.new(\"UICorner\")\nstatusCorner.CornerRadius = UDim.new(0, 4)\nstatusCorner.Parent = statusIndicator\n\nlocal statusLight = Instance.new(\"Frame\")\nstatusLight.Size = UDim2.new(0, 12, 0, 12)\nstatusLight.Position = UDim2.new(0, 8, 0.5, -6)\nstatusLight.BackgroundColor3 = Color3.fromRGB(255, 60, 60)\nstatusLight.Parent = statusIndicator\n\nlocal statusCorner2 = Instance.new(\"UICorner\")\nstatusCorner2.CornerRadius = UDim.new(0, 6)\nstatusCorner2.Parent = statusLight\n\nlocal statusLabel = Instance.new(\"TextLabel\")\nstatusLabel.Size = UDim2.new(1, -30, 1, 0)\nstatusLabel.Position = UDim2.new(0, 28, 0, 0)\nstatusLabel.BackgroundTransparency = 1\nstatusLabel.Font = Enum.Font.Gotham\nstatusLabel.TextSize = 14\nstatusLabel.TextColor3 = Color3.fromRGB(200, 200, 210)\nstatusLabel.Text = \"Status: OFF\"\nstatusLabel.TextXAlignment = Enum.TextXAlignment.Left\nstatusLabel.Parent = statusIndicator\n\n-- Buttons\nlocal toggleBtn = Instance.new(\"TextButton\")\ntoggleBtn.Size = UDim2.new(1, 0, 0, 42)\ntoggleBtn.Position = UDim2.new(0, 0, 0, 40)\ntoggleBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 55)\ntoggleBtn.TextColor3 = Color3.fromRGB(240, 240, 250)\ntoggleBtn.Font = Enum.Font.GothamBold\ntoggleBtn.TextSize = 16\ntoggleBtn.Text = \"START AUTOMATION\"\ntoggleBtn.AutoButtonColor = true\ntoggleBtn.Parent = contentFrame\n\nlocal saveSandPos = Instance.new(\"TextButton\")\nsaveSandPos.Size = UDim2.new(1, 0, 0, 42)\nsaveSandPos.Position = UDim2.new(0, 0, 0, 92)\nsaveSandPos.BackgroundColor3 = Color3.fromRGB(50, 50, 55)\nsaveSandPos.TextColor3 = Color3.fromRGB(240, 240, 250)\nsaveSandPos.Font = Enum.Font.GothamBold\nsaveSandPos.TextSize = 16\nsaveSandPos.Text = \"SAND POSITION\"\nsaveSandPos.AutoButtonColor = true\nsaveSandPos.Parent = contentFrame\n\nlocal saveWaterPos = Instance.new(\"TextButton\")\nsaveWaterPos.Size = UDim2.new(1, 0, 0, 42)\nsaveWaterPos.Position = UDim2.new(0, 0, 0, 144)\nsaveWaterPos.BackgroundColor3 = Color3.fromRGB(50, 50, 55)\nsaveWaterPos.TextColor3 = Color3.fromRGB(240, 240, 250)\nsaveWaterPos.Font = Enum.Font.GothamBold\nsaveWaterPos.TextSize = 16\nsaveWaterPos.Text = \"WATER POSITION\"\nsaveWaterPos.AutoButtonColor = true\nsaveWaterPos.Parent = contentFrame\n\n-- NEW AUTO-SELL BUTTON\nlocal autoSellBtn = Instance.new(\"TextButton\")\nautoSellBtn.Size = UDim2.new(1, 0, 0, 42)\nautoSellBtn.Position = UDim2.new(0, 0, 0, 196)\nautoSellBtn.BackgroundColor3 = Color3.fromRGB(80, 40, 40) -- Red when off\nautoSellBtn.TextColor3 = Color3.fromRGB(240, 240, 250)\nautoSellBtn.Font = Enum.Font.GothamBold\nautoSellBtn.TextSize = 16\nautoSellBtn.Text = \"AUTO-SELL: OFF\"\nautoSellBtn.AutoButtonColor = true\nautoSellBtn.Parent = contentFrame\n\n-- Luck Booster Controls (moved down)\nlocal luckFrame = Instance.new(\"Frame\")\nluckFrame.Size = UDim2.new(1, 0, 0, 60)\nluckFrame.Position = UDim2.new(0, 0, 0, 248) -- Adjusted position\nluckFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 45)\nluckFrame.Parent = contentFrame\n\nlocal luckCorner = Instance.new(\"UICorner\")\nluckCorner.CornerRadius = UDim.new(0, 6)\nluckCorner.Parent = luckFrame\n\n-- Decrease Button\nlocal decreaseBtn = Instance.new(\"TextButton\")\ndecreaseBtn.Size = UDim2.new(0.2, 0, 0.6, 0)\ndecreaseBtn.Position = UDim2.new(0.05, 0, 0.2, 0)\ndecreaseBtn.BackgroundColor3 = Color3.fromRGB(80, 40, 40)\ndecreaseBtn.TextColor3 = Color3.fromRGB(255, 150, 150)\ndecreaseBtn.Font = Enum.Font.GothamBold\ndecreaseBtn.TextSize = 16\ndecreaseBtn.Text = \"-\"\ndecreaseBtn.AutoButtonColor = true\ndecreaseBtn.Parent = luckFrame\n\n-- Boost Luck Button\nlocal boostLuckBtn = Instance.new(\"TextButton\")\nboostLuckBtn.Size = UDim2.new(0.5, 0, 0.6, 0)\nboostLuckBtn.Position = UDim2.new(0.25, 0, 0.2, 0)\nboostLuckBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 55)\nboostLuckBtn.TextColor3 = Color3.fromRGB(255, 215, 0) -- Gold color\nboostLuckBtn.Font = Enum.Font.GothamBold\nboostLuckBtn.TextSize = 16\nboostLuckBtn.Text = \"BOOST LUCK: OFF\"\nboostLuckBtn.AutoButtonColor = true\nboostLuckBtn.Parent = luckFrame\n\n-- Increase Button\nlocal increaseBtn = Instance.new(\"TextButton\")\nincreaseBtn.Size = UDim2.new(0.2, 0, 0.6, 0)\nincreaseBtn.Position = UDim2.new(0.75, 0, 0.2, 0)\nincreaseBtn.BackgroundColor3 = Color3.fromRGB(40, 80, 40)\nincreaseBtn.TextColor3 = Color3.fromRGB(150, 255, 150)\nincreaseBtn.Font = Enum.Font.GothamBold\nincreaseBtn.TextSize = 16\nincreaseBtn.Text = \"+\"\nincreaseBtn.AutoButtonColor = true\nincreaseBtn.Parent = luckFrame\n\n-- Multiplier Label\nlocal multiplierLabel = Instance.new(\"TextLabel\")\nmultiplierLabel.Size = UDim2.new(1, -16, 0, 20)\nmultiplierLabel.Position = UDim2.new(0, 8, 0.8, 0)\nmultiplierLabel.BackgroundTransparency = 1\nmultiplierLabel.Font = Enum.Font.Gotham\nmultiplierLabel.TextSize = 14\nmultiplierLabel.TextColor3 = Color3.fromRGB(200, 200, 100) -- Light yellow\nmultiplierLabel.Text = \"Multiplier: \"..currentMultiplier..\"x\"\nmultiplierLabel.TextXAlignment = Enum.TextXAlignment.Left\nmultiplierLabel.Parent = luckFrame\n\n-- Points status display (moved down)\nlocal pointsFrame = Instance.new(\"Frame\")\npointsFrame.Size = UDim2.new(1, 0, 0, 60)\npointsFrame.Position = UDim2.new(0, 0, 0, 318) -- Adjusted position\npointsFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 45)\npointsFrame.Parent = contentFrame\n\nlocal pointsCorner = Instance.new(\"UICorner\")\npointsCorner.CornerRadius = UDim.new(0, 6)\npointsCorner.Parent = pointsFrame\n\nlocal sandPosLabel = Instance.new(\"TextLabel\")\nsandPosLabel.Size = UDim2.new(1, -16, 0, 24)\nsandPosLabel.Position = UDim2.new(0, 8, 0, 8)\nsandPosLabel.BackgroundTransparency = 1\nsandPosLabel.Font = Enum.Font.Gotham\nsandPosLabel.TextSize = 14\nsandPosLabel.TextColor3 = Color3.fromRGB(180, 180, 190)\nsandPosLabel.TextXAlignment = Enum.TextXAlignment.Left\nsandPosLabel.Text = \"Sand: Not set\"\nsandPosLabel.Parent = pointsFrame\n\nlocal waterPosLabel = Instance.new(\"TextLabel\")\nwaterPosLabel.Size = UDim2.new(1, -16, 0, 24)\nwaterPosLabel.Position = UDim2.new(0, 8, 0, 32)\nwaterPosLabel.BackgroundTransparency = 1\nwaterPosLabel.Font = Enum.Font.Gotham\nwaterPosLabel.TextSize = 14\nwaterPosLabel.TextColor3 = Color3.fromRGB(180, 180, 190)\nwaterPosLabel.TextXAlignment = Enum.TextXAlignment.Left\nwaterPosLabel.Text = \"Water: Not set\"\nwaterPosLabel.Parent = pointsFrame\n\n-- Credit label (bigger and golden)\nlocal creditLabel = Instance.new(\"TextLabel\")\ncreditLabel.Size = UDim2.new(1, 0, 0, 24)\ncreditLabel.Position = UDim2.new(0, 0, 1, -28)\ncreditLabel.BackgroundTransparency = 1\ncreditLabel.Font = Enum.Font.GothamBold\ncreditLabel.TextSize = 14\ncreditLabel.TextColor3 = Color3.fromRGB(255, 215, 0) -- Gold color\ncreditLabel.Text = \"by FUFFY\"\ncreditLabel.TextXAlignment = Enum.TextXAlignment.Center\ncreditLabel.Parent = contentFrame\n\n-- Button corners\nlocal btnCorner = Instance.new(\"UICorner\")\nbtnCorner.CornerRadius = UDim.new(0, 6)\nbtnCorner.Parent = toggleBtn\nbtnCorner:Clone().Parent = saveSandPos\nbtnCorner:Clone().Parent = saveWaterPos\nbtnCorner:Clone().Parent = autoSellBtn -- Added for new button\nbtnCorner:Clone().Parent = decreaseBtn\nbtnCorner:Clone().Parent = boostLuckBtn\nbtnCorner:Clone().Parent = increaseBtn\n\n-- Button strokes\nlocal btnStroke = Instance.new(\"UIStroke\")\nbtnStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border\nbtnStroke.Color = Color3.fromRGB(80, 80, 90)\nbtnStroke.Thickness = 1\nbtnStroke.Parent = toggleBtn\nbtnStroke:Clone().Parent = saveSandPos\nbtnStroke:Clone().Parent = saveWaterPos\nbtnStroke:Clone().Parent = autoSellBtn -- Added for new button\nbtnStroke:Clone().Parent = decreaseBtn\nbtnStroke:Clone().Parent = boostLuckBtn\nbtnStroke:Clone().Parent = increaseBtn\n\n-- ==============================================\n-- AUTO-SELL FUNCTIONS\n-- ==============================================\n\n-- Find the SellAll remote function\nlocal function findSellRemote()\n    local remotes = ReplicatedStorage:FindFirstChild(\"Remotes\")\n    if remotes then\n        local shop = remotes:FindFirstChild(\"Shop\")\n        if shop then\n            return shop:FindFirstChild(\"SellAll\")\n        end\n    end\n    return nil\nend\n\n-- Play sell sound effect\nlocal function playSellSound()\n    if not autoSellConfig.SoundEffect then return end\n    \n    local sound = Instance.new(\"Sound\")\n    sound.SoundId = autoSellConfig.SoundID\n    sound.Volume = 0.5\n    sound.Parent = player.Character or player:FindFirstChild(\"HumanoidRootPart\") or workspace\n    sound:Play()\n    game:GetService(\"Debris\"):AddItem(sound, 3)\nend\n\n-- Main selling function\nlocal function attemptAutoSell()\n    if os.time() - lastSellTime \u003C autoSellConfig.SellInterval then return end\n\n    local sellRemote = findSellRemote()\n    \n    if not sellRemote then\n        lastSellTime = os.time()\n        return\n    end\n\n    -- Attempt to sell\n    local success, result = pcall(function()\n        return sellRemote:InvokeServer()\n    end)\n\n    if success then\n        playSellSound()\n    end\n\n    lastSellTime = os.time()\nend\n\n-- ==============================================\n-- PAN AUTOMATION FUNCTIONS (UNCHANGED FROM WORKING VERSION)\n-- ==============================================\n\nlocal function lockItem(item)\n    if not item:IsA(\"Tool\") then return end\n    if item:GetAttribute(\"Locked\") then return end\n    \n    local starIcon = Instance.new(\"ImageLabel\")\n    starIcon.Size = UDim2.new(0, 20, 0, 20)\n    starIcon.Position = UDim2.new(0.5, 0, 0.5, 0)\n    starIcon.Image = \"rbxassetid://file-X4wQVfUybs7CTcxaBPqz4p\"\n    starIcon.AnchorPoint = Vector2.new(0.5, 0.5)\n    starIcon.BackgroundTransparency = 1\n    starIcon.Parent = item:FindFirstChildOfClass(\"Part\") or item:WaitForChild(\"Handle\")\n    item:SetAttribute(\"Locked\", true)\nend\n\nlocal function simulateWaterAction()\n    local viewport = workspace.CurrentCamera.ViewportSize\n    VirtualInputManager:SendMouseButtonEvent(viewport.X/2, viewport.Y/2, 0, true, game, 0)\n    task.wait(0.05)\n    VirtualInputManager:SendMouseButtonEvent(viewport.X/2, viewport.Y/2, 0, false, game, 0)\nend\n\nlocal function moveToPosition(character, targetPos)\n    local humanoid = character:FindFirstChild(\"Humanoid\")\n    local hrp = character:FindFirstChild(\"HumanoidRootPart\")\n    if not humanoid or not hrp then return false end\n\n    humanoid:MoveTo(targetPos)\n    \n    local startTime = tick()\n    local reached = false\n    local conn = humanoid.MoveToFinished:Connect(function(success)\n        reached = success\n    end)\n\n    while not reached and tick() - startTime \u003C 4 do\n        if (targetPos - hrp.Position).Magnitude \u003C 2 then\n            reached = true\n        end\n        task.wait(0.1)\n    end\n    \n    conn:Disconnect()\n    return reached\nend\n\nlocal function processPanAutomation()\n    local character = player.Character\n    if not character then return end\n    \n    local backpack = player:FindFirstChild(\"Backpack\")\n    if not backpack then return end\n\n    for _, item in pairs(character:GetChildren()) do\n        if item:IsA(\"Tool\") and string.find(item.Name:lower(), \"pan\") then\n            local scripts = item:FindFirstChild(\"Scripts\")\n            if scripts then\n                local toggle = scripts:FindFirstChild(\"ToggleShovelActive\")\n                if toggle then toggle:FireServer(true) end\n                \n                local collect = scripts:FindFirstChild(\"Collect\")\n                if collect then collect:InvokeServer(1) end\n                \n                local shake = scripts:FindFirstChild(\"Shake\")\n                if shake then shake:FireServer() end\n            end\n        end\n    end\n\n    for _, item in pairs(backpack:GetChildren()) do\n        if item:IsA(\"Tool\") and string.find(item.Name:lower(), \"pan\") then\n            local scripts = item:FindFirstChild(\"Scripts\")\n            if scripts then\n                local toggle = scripts:FindFirstChild(\"ToggleShovelActive\")\n                if toggle then toggle:FireServer(true) end\n                \n                local collect = scripts:FindFirstChild(\"Collect\")\n                if collect then collect:InvokeServer(1) end\n                \n                local shake = scripts:FindFirstChild(\"Shake\")\n                if shake then shake:FireServer() end\n            end\n        end\n    end\n\n    for _, item in pairs(backpack:GetChildren()) do\n        if item:IsA(\"Tool\") then\n            for _, category in pairs(items) do\n                if table.find(category, item.Name) then\n                    lockItem(item)\n                    break\n                end\n            end\n        end\n    end\nend\n\nlocal function panAutomation()\n    while panRunning do\n        local success, err = pcall(function()\n            local character = player.Character\n            if not character then return end\n            \n            if sandPosition then\n                local arrived = moveToPosition(character, sandPosition)\n                if arrived then\n                    for i = 1, 4 do\n                        if not panRunning then break end\n                        processPanAutomation()\n                        task.wait(0.5)\n                    end\n                end\n            end\n            \n            if waterPosition then\n                local arrived = moveToPosition(character, waterPosition)\n                if arrived then\n                    simulateWaterAction()\n                    \n                    for i = 1, 10 do\n                        if not panRunning then break end\n                        processPanAutomation()\n                        task.wait(0.5)\n                    end\n                end\n            end\n        end)\n        \n        if not success then\n            warn(\"Error in automation:\", err)\n            task.wait(1)\n        end\n        \n        task.wait(0.1)\n    end\nend\n\n-- ==============================================\n-- LUCK BOOSTER FUNCTIONS (UNCHANGED)\n-- ==============================================\n\nlocal function findLuckStat()\n    -- Check character stats first\n    for _, stat in pairs(player.Character:GetChildren()) do\n        if stat:IsA(\"NumberValue\") then\n            for _, name in pairs(luckStatNames) do\n                if stat.Name:lower():find(name:lower()) then\n                    return stat\n                end\n            end\n        end\n    end\n\n    -- Check player stats\n    for _, stat in pairs(player:GetChildren()) do\n        if stat:IsA(\"NumberValue\") then\n            for _, name in pairs(luckStatNames) do\n                if stat.Name:lower():find(name:lower()) then\n                    return stat\n                end\n            end\n        end\n    end\n\n    -- Check ReplicatedStorage\n    for _, stat in pairs(game:GetService(\"ReplicatedStorage\"):GetDescendants()) do\n        if stat:IsA(\"NumberValue\") then\n            for _, name in pairs(luckStatNames) do\n                if stat.Name:lower():find(name:lower()) then\n                    return stat\n                end\n            end\n        end\n    end\n\n    return nil\nend\n\nlocal function updateLuck()\n    if not luckStat then return end\n\n    if isLuckActive then\n        local target = originalLuckValue * currentMultiplier\n        luckStat.Value = luckStat.Value + (target - luckStat.Value) * 0.15\n    else\n        luckStat.Value = luckStat.Value + (originalLuckValue - luckStat.Value) * 0.15\n    end\nend\n\nlocal function toggleLuckBoost()\n    isLuckActive = not isLuckActive\n    boostLuckBtn.Text = \"BOOST LUCK: \"..(isLuckActive and \"ON\" or \"OFF\")\n    \n    game:GetService(\"StarterGui\"):SetCore(\"SendNotification\", {\n        Title = \"Luck Boost\",\n        Text = isLuckActive and (\"Active (\"..currentMultiplier..\"x)\") or \"Disabled\",\n        Duration = 2\n    })\nend\n\nlocal function adjustMultiplier(change)\n    currentMultiplier = math.clamp(\n        currentMultiplier + change,\n        1.0,\n        maxMultiplier\n    )\n    multiplierLabel.Text = \"Multiplier: \"..currentMultiplier..\"x\"\nend\n\n-- ==============================================\n-- CONNECTIONS\n-- ==============================================\n\n-- Pan Automation Connections\ntoggleBtn.MouseButton1Click:Connect(function()\n    panRunning = not panRunning\n    if panRunning then\n        toggleBtn.Text = \"STOP AUTOMATION\"\n        statusLabel.Text = \"Status: RUNNING\"\n        statusLight.BackgroundColor3 = Color3.fromRGB(60, 255, 60)\n        spawn(panAutomation)\n    else\n        toggleBtn.Text = \"START AUTOMATION\"\n        statusLabel.Text = \"Status: OFF\"\n        statusLight.BackgroundColor3 = Color3.fromRGB(255, 60, 60)\n    end\nend)\n\nsaveSandPos.MouseButton1Click:Connect(function()\n    local character = player.Character\n    if not character then return end\n    \n    local hrp = character:FindFirstChild(\"HumanoidRootPart\")\n    if not hrp then return end\n    \n    sandPosition = hrp.Position\n    sandPosLabel.Text = string.format(\"Sand: Saved (%.1f, %.1f, %.1f)\", sandPosition.X, sandPosition.Y, sandPosition.Z)\n    sandPosLabel.TextColor3 = Color3.fromRGB(60, 255, 60)\nend)\n\nsaveWaterPos.MouseButton1Click:Connect(function()\n    local character = player.Character\n    if not character then return end\n    \n    local hrp = character:FindFirstChild(\"HumanoidRootPart\")\n    if not hrp then return end\n    \n    waterPosition = hrp.Position\n    waterPosLabel.Text = string.format(\"Water: Saved (%.1f, %.1f, %.1f)\", waterPosition.X, waterPosition.Y, waterPosition.Z)\n    waterPosLabel.TextColor3 = Color3.fromRGB(60, 255, 60)\nend)\n\n-- NEW AUTO-SELL CONNECTION\nautoSellBtn.MouseButton1Click:Connect(function()\n    autoSellEnabled = not autoSellEnabled\n    if autoSellEnabled then\n        autoSellBtn.Text = \"AUTO-SELL: ON\"\n        autoSellBtn.BackgroundColor3 = Color3.fromRGB(40, 80, 40) -- Green when on\n    else\n        autoSellBtn.Text = \"AUTO-SELL: OFF\"\n        autoSellBtn.BackgroundColor3 = Color3.fromRGB(80, 40, 40) -- Red when off\n    end\nend)\n\n-- Luck Booster Connections\nboostLuckBtn.MouseButton1Click:Connect(toggleLuckBoost)\ndecreaseBtn.MouseButton1Click:Connect(function()\n    adjustMultiplier(-adjustmentStep)\nend)\nincreaseBtn.MouseButton1Click:Connect(function()\n    adjustMultiplier(adjustmentStep)\nend)\n\n-- Character handling for luck stat\nplayer.CharacterAdded:Connect(function(newChar)\n    task.wait(1) -- Wait for stats to load\n    luckStat = findLuckStat()\n    if luckStat then\n        originalLuckValue = luckStat.Value\n    end\nend)\n\n-- Initial luck stat setup\ntask.spawn(function()\n    task.wait(2) -- Wait for game to load\n    luckStat = findLuckStat()\n    if luckStat then\n        originalLuckValue = luckStat.Value\n    end\nend)\n\n-- Main luck update loop\nRunService.Heartbeat:Connect(function()\n    if luckStat then\n        pcall(updateLuck)\n    else\n        luckStat = findLuckStat()\n        if luckStat then\n            originalLuckValue = luckStat.Value\n        end\n    end\nend)\n\n-- Auto-sell loop\nRunService.Heartbeat:Connect(function()\n    if autoSellEnabled then\n        pcall(attemptAutoSell)\n    end\nend)\n\n-- Cleanup\nplayer.CharacterRemoving:Connect(function()\n    panRunning = false\nend)\n\n-- Initial notification\ngame:GetService(\"StarterGui\"):SetCore(\"SendNotification\", {\n    Title = \"Pan Automation + Luck Booster\",\n    Text = \"Script loaded successfully!\",\n    Duration = 5\n})"