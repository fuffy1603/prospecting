local Players = game:GetService("Players")
local player = Players.LocalPlayer
local VirtualInputManager = game:GetService("VirtualInputManager")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Pan Automation Variables
local panRunning = false
local sandPosition = nil
local waterPosition = nil

-- Luck Booster Variables
local luckStat
local originalLuckValue = 1
local isLuckActive = false
local currentMultiplier = 1.5
local luckStatNames = {"Luck", "Fortune", "Lucky"}
local adjustmentStep = 0.2
local maxMultiplier = 3.0

-- Auto-Sell Variables
local autoSellEnabled = false
local lastSellTime = 0
local autoSellConfig = {
    SellInterval = 5,              -- Seconds between sell attempts
    SoundEffect = true,            -- Play cash register sound
    SoundID = "rbxassetid://131147520" -- Cash register sound ID
}

-- Item categorization
local items = {
    Legendary = {"Palladium", "Rose Gold", "Diamond", "Uranium", "Luminum", "Catseye", "Starshine", "Aetherite", "Volcanic Key", "Dragon Bone", "Cinnabar","Fire Opal"},
    Mythic = {"Pink Diamond", "Painite", "Inferlume", "Vortessence", "Prismara"},
    Exotic = {"Dinosaur Skull"}
}

-- Create UI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PanAutoGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Make frame taller to accommodate new controls (increased height from 420 to 480)
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 280, 0, 480)
frame.Position = UDim2.new(0.8, 0, 0.3, 0)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
frame.BorderSizePixel = 0
frame.AnchorPoint = Vector2.new(0.5, 0.5)
frame.Parent = screenGui
frame.ClipsDescendants = true
frame.Active = true
frame.Draggable = true

-- Add rounded corners
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = frame

-- Title bar
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 36)
titleBar.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
titleBar.BorderSizePixel = 0
titleBar.Parent = frame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = titleBar

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -20, 1, 0)
title.Position = UDim2.new(0, 10, 0, 0)
title.BackgroundTransparency = 1
title.Text = "PAN AUTOMATION"
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.TextColor3 = Color3.fromRGB(220, 220, 230)
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = titleBar

-- Close button
local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 24, 0, 24)
closeBtn.Position = UDim2.new(1, -28, 0.5, -12)
closeBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
closeBtn.TextColor3 = Color3.fromRGB(220, 220, 230)
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 14
closeBtn.Text = "X"
closeBtn.AutoButtonColor = true
closeBtn.Parent = titleBar

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 4)
closeCorner.Parent = closeBtn

-- Content frame (made taller to fit new controls)
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, -20, 1, -56)
contentFrame.Position = UDim2.new(0, 10, 0, 46)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = frame

-- Status indicator
local statusIndicator = Instance.new("Frame")
statusIndicator.Size = UDim2.new(1, 0, 0, 24)
statusIndicator.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
statusIndicator.Parent = contentFrame

local statusCorner = Instance.new("UICorner")
statusCorner.CornerRadius = UDim.new(0, 4)
statusCorner.Parent = statusIndicator

local statusLight = Instance.new("Frame")
statusLight.Size = UDim2.new(0, 12, 0, 12)
statusLight.Position = UDim2.new(0, 8, 0.5, -6)
statusLight.BackgroundColor3 = Color3.fromRGB(255, 60, 60)
statusLight.Parent = statusIndicator

local statusCorner2 = Instance.new("UICorner")
statusCorner2.CornerRadius = UDim.new(0, 6)
statusCorner2.Parent = statusLight

local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(1, -30, 1, 0)
statusLabel.Position = UDim2.new(0, 28, 0, 0)
statusLabel.BackgroundTransparency = 1
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextSize = 14
statusLabel.TextColor3 = Color3.fromRGB(200, 200, 210)
statusLabel.Text = "Status: OFF"
statusLabel.TextXAlignment = Enum.TextXAlignment.Left
statusLabel.Parent = statusIndicator

-- Buttons
local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(1, 0, 0, 42)
toggleBtn.Position = UDim2.new(0, 0, 0, 40)
toggleBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
toggleBtn.TextColor3 = Color3.fromRGB(240, 240, 250)
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 16
toggleBtn.Text = "START AUTOMATION"
toggleBtn.AutoButtonColor = true
toggleBtn.Parent = contentFrame

local saveSandPos = Instance.new("TextButton")
saveSandPos.Size = UDim2.new(1, 0, 0, 42)
saveSandPos.Position = UDim2.new(0, 0, 0, 92)
saveSandPos.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
saveSandPos.TextColor3 = Color3.fromRGB(240, 240, 250)
saveSandPos.Font = Enum.Font.GothamBold
saveSandPos.TextSize = 16
saveSandPos.Text = "SAND POSITION"
saveSandPos.AutoButtonColor = true
saveSandPos.Parent = contentFrame

local saveWaterPos = Instance.new("TextButton")
saveWaterPos.Size = UDim2.new(1, 0, 0, 42)
saveWaterPos.Position = UDim2.new(0, 0, 0, 144)
saveWaterPos.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
saveWaterPos.TextColor3 = Color3.fromRGB(240, 240, 250)
saveWaterPos.Font = Enum.Font.GothamBold
saveWaterPos.TextSize = 16
saveWaterPos.Text = "WATER POSITION"
saveWaterPos.AutoButtonColor = true
saveWaterPos.Parent = contentFrame

-- NEW AUTO-SELL BUTTON
local autoSellBtn = Instance.new("TextButton")
autoSellBtn.Size = UDim2.new(1, 0, 0, 42)
autoSellBtn.Position = UDim2.new(0, 0, 0, 196)
autoSellBtn.BackgroundColor3 = Color3.fromRGB(80, 40, 40) -- Red when off
autoSellBtn.TextColor3 = Color3.fromRGB(240, 240, 250)
autoSellBtn.Font = Enum.Font.GothamBold
autoSellBtn.TextSize = 16
autoSellBtn.Text = "AUTO-SELL: OFF"
autoSellBtn.AutoButtonColor = true
autoSellBtn.Parent = contentFrame

-- Luck Booster Controls (moved down)
local luckFrame = Instance.new("Frame")
luckFrame.Size = UDim2.new(1, 0, 0, 60)
luckFrame.Position = UDim2.new(0, 0, 0, 248) -- Adjusted position
luckFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
luckFrame.Parent = contentFrame

local luckCorner = Instance.new("UICorner")
luckCorner.CornerRadius = UDim.new(0, 6)
luckCorner.Parent = luckFrame

-- Decrease Button
local decreaseBtn = Instance.new("TextButton")
decreaseBtn.Size = UDim2.new(0.2, 0, 0.6, 0)
decreaseBtn.Position = UDim2.new(0.05, 0, 0.2, 0)
decreaseBtn.BackgroundColor3 = Color3.fromRGB(80, 40, 40)
decreaseBtn.TextColor3 = Color3.fromRGB(255, 150, 150)
decreaseBtn.Font = Enum.Font.GothamBold
decreaseBtn.TextSize = 16
decreaseBtn.Text = "-"
decreaseBtn.AutoButtonColor = true
decreaseBtn.Parent = luckFrame

-- Boost Luck Button
local boostLuckBtn = Instance.new("TextButton")
boostLuckBtn.Size = UDim2.new(0.5, 0, 0.6, 0)
boostLuckBtn.Position = UDim2.new(0.25, 0, 0.2, 0)
boostLuckBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 55)
boostLuckBtn.TextColor3 = Color3.fromRGB(255, 215, 0) -- Gold color
boostLuckBtn.Font = Enum.Font.GothamBold
boostLuckBtn.TextSize = 16
boostLuckBtn.Text = "BOOST LUCK: OFF"
boostLuckBtn.AutoButtonColor = true
boostLuckBtn.Parent = luckFrame

-- Increase Button
local increaseBtn = Instance.new("TextButton")
increaseBtn.Size = UDim2.new(0.2, 0, 0.6, 0)
increaseBtn.Position = UDim2.new(0.75, 0, 0.2, 0)
increaseBtn.BackgroundColor3 = Color3.fromRGB(40, 80, 40)
increaseBtn.TextColor3 = Color3.fromRGB(150, 255, 150)
increaseBtn.Font = Enum.Font.GothamBold
increaseBtn.TextSize = 16
increaseBtn.Text = "+"
increaseBtn.AutoButtonColor = true
increaseBtn.Parent = luckFrame

-- Multiplier Label
local multiplierLabel = Instance.new("TextLabel")
multiplierLabel.Size = UDim2.new(1, -16, 0, 20)
multiplierLabel.Position = UDim2.new(0, 8, 0.8, 0)
multiplierLabel.BackgroundTransparency = 1
multiplierLabel.Font = Enum.Font.Gotham
multiplierLabel.TextSize = 14
multiplierLabel.TextColor3 = Color3.fromRGB(200, 200, 100) -- Light yellow
multiplierLabel.Text = "Multiplier: "..currentMultiplier.."x"
multiplierLabel.TextXAlignment = Enum.TextXAlignment.Left
multiplierLabel.Parent = luckFrame

-- Points status display (moved down)
local pointsFrame = Instance.new("Frame")
pointsFrame.Size = UDim2.new(1, 0, 0, 60)
pointsFrame.Position = UDim2.new(0, 0, 0, 318) -- Adjusted position
pointsFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
pointsFrame.Parent = contentFrame

local pointsCorner = Instance.new("UICorner")
pointsCorner.CornerRadius = UDim.new(0, 6)
pointsCorner.Parent = pointsFrame

local sandPosLabel = Instance.new("TextLabel")
sandPosLabel.Size = UDim2.new(1, -16, 0, 24)
sandPosLabel.Position = UDim2.new(0, 8, 0, 8)
sandPosLabel.BackgroundTransparency = 1
sandPosLabel.Font = Enum.Font.Gotham
sandPosLabel.TextSize = 14
sandPosLabel.TextColor3 = Color3.fromRGB(180, 180, 190)
sandPosLabel.TextXAlignment = Enum.TextXAlignment.Left
sandPosLabel.Text = "Sand: Not set"
sandPosLabel.Parent = pointsFrame

local waterPosLabel = Instance.new("TextLabel")
waterPosLabel.Size = UDim2.new(1, -16, 0, 24)
waterPosLabel.Position = UDim2.new(0, 8, 0, 32)
waterPosLabel.BackgroundTransparency = 1
waterPosLabel.Font = Enum.Font.Gotham
waterPosLabel.TextSize = 14
waterPosLabel.TextColor3 = Color3.fromRGB(180, 180, 190)
waterPosLabel.TextXAlignment = Enum.TextXAlignment.Left
waterPosLabel.Text = "Water: Not set"
waterPosLabel.Parent = pointsFrame

-- Credit label (bigger and golden)
local creditLabel = Instance.new("TextLabel")
creditLabel.Size = UDim2.new(1, 0, 0, 24)
creditLabel.Position = UDim2.new(0, 0, 1, -28)
creditLabel.BackgroundTransparency = 1
creditLabel.Font = Enum.Font.GothamBold
creditLabel.TextSize = 14
creditLabel.TextColor3 = Color3.fromRGB(255, 215, 0) -- Gold color
creditLabel.Text = "by FUFFY"
creditLabel.TextXAlignment = Enum.TextXAlignment.Center
creditLabel.Parent = contentFrame

-- Button corners
local btnCorner = Instance.new("UICorner")
btnCorner.CornerRadius = UDim.new(0, 6)
btnCorner.Parent = toggleBtn
btnCorner:Clone().Parent = saveSandPos
btnCorner:Clone().Parent = saveWaterPos
btnCorner:Clone().Parent = autoSellBtn -- Added for new button
btnCorner:Clone().Parent = decreaseBtn
btnCorner:Clone().Parent = boostLuckBtn
btnCorner:Clone().Parent = increaseBtn

-- Button strokes
local btnStroke = Instance.new("UIStroke")
btnStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
btnStroke.Color = Color3.fromRGB(80, 80, 90)
btnStroke.Thickness = 1
btnStroke.Parent = toggleBtn
btnStroke:Clone().Parent = saveSandPos
btnStroke:Clone().Parent = saveWaterPos
btnStroke:Clone().Parent = autoSellBtn -- Added for new button
btnStroke:Clone().Parent = decreaseBtn
btnStroke:Clone().Parent = boostLuckBtn
btnStroke:Clone().Parent = increaseBtn

-- ==============================================
-- AUTO-SELL FUNCTIONS
-- ==============================================

-- Find the SellAll remote function
local function findSellRemote()
    local remotes = ReplicatedStorage:FindFirstChild("Remotes")
    if remotes then
        local shop = remotes:FindFirstChild("Shop")
        if shop then
            return shop:FindFirstChild("SellAll")
        end
    end
    return nil
end

-- Play sell sound effect
local function playSellSound()
    if not autoSellConfig.SoundEffect then return end
    
    local sound = Instance.new("Sound")
    sound.SoundId = autoSellConfig.SoundID
    sound.Volume = 0.5
    sound.Parent = player.Character or player:FindFirstChild("HumanoidRootPart") or workspace
    sound:Play()
    game:GetService("Debris"):AddItem(sound, 3)
end

-- Main selling function
local function attemptAutoSell()
    if os.time() - lastSellTime < autoSellConfig.SellInterval then return end

    local sellRemote = findSellRemote()
    
    if not sellRemote then
        lastSellTime = os.time()
        return
    end

    -- Attempt to sell
    local success, result = pcall(function()
        return sellRemote:InvokeServer()
    end)

    if success then
        playSellSound()
    end

    lastSellTime = os.time()
end

-- ==============================================
-- PAN AUTOMATION FUNCTIONS (UNCHANGED FROM WORKING VERSION)
-- ==============================================

local function lockItem(item)
    if not item:IsA("Tool") then return end
    if item:GetAttribute("Locked") then return end
    
    local starIcon = Instance.new("ImageLabel")
    starIcon.Size = UDim2.new(0, 20, 0, 20)
    starIcon.Position = UDim2.new(0.5, 0, 0.5, 0)
    starIcon.Image = "rbxassetid://file-X4wQVfUybs7CTcxaBPqz4p"
    starIcon.AnchorPoint = Vector2.new(0.5, 0.5)
    starIcon.BackgroundTransparency = 1
    starIcon.Parent = item:FindFirstChildOfClass("Part") or item:WaitForChild("Handle")
    item:SetAttribute("Locked", true)
end

local function simulateWaterAction()
    local viewport = workspace.CurrentCamera.ViewportSize
    VirtualInputManager:SendMouseButtonEvent(viewport.X/2, viewport.Y/2, 0, true, game, 0)
    task.wait(0.05)
    VirtualInputManager:SendMouseButtonEvent(viewport.X/2, viewport.Y/2, 0, false, game, 0)
end

local function moveToPosition(character, targetPos)
    local humanoid = character:FindFirstChild("Humanoid")
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not humanoid or not hrp then return false end

    humanoid:MoveTo(targetPos)
    
    local startTime = tick()
    local reached = false
    local conn = humanoid.MoveToFinished:Connect(function(success)
        reached = success
    end)

    while not reached and tick() - startTime < 4 do
        if (targetPos - hrp.Position).Magnitude < 2 then
            reached = true
        end
        task.wait(0.1)
    end
    
    conn:Disconnect()
    return reached
end

local function processPanAutomation()
    local character = player.Character
    if not character then return end
    
    local backpack = player:FindFirstChild("Backpack")
    if not backpack then return end

    for _, item in pairs(character:GetChildren()) do
        if item:IsA("Tool") and string.find(item.Name:lower(), "pan") then
            local scripts = item:FindFirstChild("Scripts")
            if scripts then
                local toggle = scripts:FindFirstChild("ToggleShovelActive")
                if toggle then toggle:FireServer(true) end
                
                local collect = scripts:FindFirstChild("Collect")
                if collect then collect:InvokeServer(1) end
                
                local shake = scripts:FindFirstChild("Shake")
                if shake then shake:FireServer() end
            end
        end
    end

    for _, item in pairs(backpack:GetChildren()) do
        if item:IsA("Tool") and string.find(item.Name:lower(), "pan") then
            local scripts = item:FindFirstChild("Scripts")
            if scripts then
                local toggle = scripts:FindFirstChild("ToggleShovelActive")
                if toggle then toggle:FireServer(true) end
                
                local collect = scripts:FindFirstChild("Collect")
                if collect then collect:InvokeServer(1) end
                
                local shake = scripts:FindFirstChild("Shake")
                if shake then shake:FireServer() end
            end
        end
    end

    for _, item in pairs(backpack:GetChildren()) do
        if item:IsA("Tool") then
            for _, category in pairs(items) do
                if table.find(category, item.Name) then
                    lockItem(item)
                    break
                end
            end
        end
    end
end

local function panAutomation()
    while panRunning do
        local success, err = pcall(function()
            local character = player.Character
            if not character then return end
            
            if sandPosition then
                local arrived = moveToPosition(character, sandPosition)
                if arrived then
                    for i = 1, 4 do
                        if not panRunning then break end
                        processPanAutomation()
                        task.wait(0.5)
                    end
                end
            end
            
            if waterPosition then
                local arrived = moveToPosition(character, waterPosition)
                if arrived then
                    simulateWaterAction()
                    
                    for i = 1, 10 do
                        if not panRunning then break end
                        processPanAutomation()
                        task.wait(0.5)
                    end
                end
            end
        end)
        
        if not success then
            warn("Error in automation:", err)
            task.wait(1)
        end
        
        task.wait(0.1)
    end
end

-- ==============================================
-- LUCK BOOSTER FUNCTIONS (UNCHANGED)
-- ==============================================

local function findLuckStat()
    -- Check character stats first
    for _, stat in pairs(player.Character:GetChildren()) do
        if stat:IsA("NumberValue") then
            for _, name in pairs(luckStatNames) do
                if stat.Name:lower():find(name:lower()) then
                    return stat
                end
            end
        end
    end

    -- Check player stats
    for _, stat in pairs(player:GetChildren()) do
        if stat:IsA("NumberValue") then
            for _, name in pairs(luckStatNames) do
                if stat.Name:lower():find(name:lower()) then
                    return stat
                end
            end
        end
    end

    -- Check ReplicatedStorage
    for _, stat in pairs(game:GetService("ReplicatedStorage"):GetDescendants()) do
        if stat:IsA("NumberValue") then
            for _, name in pairs(luckStatNames) do
                if stat.Name:lower():find(name:lower()) then
                    return stat
                end
            end
        end
    end

    return nil
end

local function updateLuck()
    if not luckStat then return end

    if isLuckActive then
        local target = originalLuckValue * currentMultiplier
        luckStat.Value = luckStat.Value + (target - luckStat.Value) * 0.15
    else
        luckStat.Value = luckStat.Value + (originalLuckValue - luckStat.Value) * 0.15
    end
end

local function toggleLuckBoost()
    isLuckActive = not isLuckActive
    boostLuckBtn.Text = "BOOST LUCK: "..(isLuckActive and "ON" or "OFF")
    
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Luck Boost",
        Text = isLuckActive and ("Active ("..currentMultiplier.."x)") or "Disabled",
        Duration = 2
    })
end

local function adjustMultiplier(change)
    currentMultiplier = math.clamp(
        currentMultiplier + change,
        1.0,
        maxMultiplier
    )
    multiplierLabel.Text = "Multiplier: "..currentMultiplier.."x"
end

-- ==============================================
-- CONNECTIONS
-- ==============================================

-- Pan Automation Connections
toggleBtn.MouseButton1Click:Connect(function()
    panRunning = not panRunning
    if panRunning then
        toggleBtn.Text = "STOP AUTOMATION"
        statusLabel.Text = "Status: RUNNING"
        statusLight.BackgroundColor3 = Color3.fromRGB(60, 255, 60)
        spawn(panAutomation)
    else
        toggleBtn.Text = "START AUTOMATION"
        statusLabel.Text = "Status: OFF"
        statusLight.BackgroundColor3 = Color3.fromRGB(255, 60, 60)
    end
end)

saveSandPos.MouseButton1Click:Connect(function()
    local character = player.Character
    if not character then return end
    
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    
    sandPosition = hrp.Position
    sandPosLabel.Text = string.format("Sand: Saved (%.1f, %.1f, %.1f)", sandPosition.X, sandPosition.Y, sandPosition.Z)
    sandPosLabel.TextColor3 = Color3.fromRGB(60, 255, 60)
end)

saveWaterPos.MouseButton1Click:Connect(function()
    local character = player.Character
    if not character then return end
    
    local hrp = character:FindFirstChild("HumanoidRootPart")
    if not hrp then return end
    
    waterPosition = hrp.Position
    waterPosLabel.Text = string.format("Water: Saved (%.1f, %.1f, %.1f)", waterPosition.X, waterPosition.Y, waterPosition.Z)
    waterPosLabel.TextColor3 = Color3.fromRGB(60, 255, 60)
end)

-- NEW AUTO-SELL CONNECTION
autoSellBtn.MouseButton1Click:Connect(function()
    autoSellEnabled = not autoSellEnabled
    if autoSellEnabled then
        autoSellBtn.Text = "AUTO-SELL: ON"
        autoSellBtn.BackgroundColor3 = Color3.fromRGB(40, 80, 40) -- Green when on
    else
        autoSellBtn.Text = "AUTO-SELL: OFF"
        autoSellBtn.BackgroundColor3 = Color3.fromRGB(80, 40, 40) -- Red when off
    end
end)

-- Luck Booster Connections
boostLuckBtn.MouseButton1Click:Connect(toggleLuckBoost)
decreaseBtn.MouseButton1Click:Connect(function()
    adjustMultiplier(-adjustmentStep)
end)
increaseBtn.MouseButton1Click:Connect(function()
    adjustMultiplier(adjustmentStep)
end)

-- Character handling for luck stat
player.CharacterAdded:Connect(function(newChar)
    task.wait(1) -- Wait for stats to load
    luckStat = findLuckStat()
    if luckStat then
        originalLuckValue = luckStat.Value
    end
end)

-- Initial luck stat setup
task.spawn(function()
    task.wait(2) -- Wait for game to load
    luckStat = findLuckStat()
    if luckStat then
        originalLuckValue = luckStat.Value
    end
end)

-- Main luck update loop
RunService.Heartbeat:Connect(function()
    if luckStat then
        pcall(updateLuck)
    else
        luckStat = findLuckStat()
        if luckStat then
            originalLuckValue = luckStat.Value
        end
    end
end)

-- Auto-sell loop
RunService.Heartbeat:Connect(function()
    if autoSellEnabled then
        pcall(attemptAutoSell)
    end
end)

-- Cleanup
player.CharacterRemoving:Connect(function()
    panRunning = false
end)

-- Initial notification
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Pan Automation + Luck Booster",
    Text = "Script loaded successfully!",
    Duration = 5
})
